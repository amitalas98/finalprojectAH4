phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram()
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
mean(phats_20)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
proportions <- ames %>% select(Central.Air) %>% table() %>% prop.table()
p <- as.numeric(proportions[2])
ames <- ames %>% mutate(air = 1*(Central.Air == 'Y'))
air <- ames$air
pop_p <- sum(air)/as.numeric(count(ames))
pop_sd <- sd(air)
pop_sd_test <- sqrt(pop_p*(1-pop_p))
samp <- sample(air, size = 50)
p_hat <- sum(samp)/length(samp)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
median(phats_20)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
median(phats_20)
min(phats_20)
max(phats_20)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
median(phats_20)
min(phats_20)
max(phats_20)
summarize(phats_20)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
median(phats_20)
min(phats_20)
max(phats_20)
summary(phats_20)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
summary(phats_20)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
proportions <- ames %>% select(Central.Air) %>% table() %>% prop.table()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(oilabs)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
proportions <- ames %>% select(Central.Air) %>% table() %>% prop.table()
p <- as.numeric(proportions[2])
proportions <- ames %>% select(Central.Air) %>% table() %>% prop.table()
p <- as.numeric(proportions[2])
ames <- ames %>% mutate(air = 1*(Central.Air == 'Y'))
air <- ames$air
pop_p <- sum(air)/as.numeric(count(ames))
pop_sd <- sd(air)
pop_sd_test <- sqrt(pop_p*(1-pop_p))
samp <- sample(air, size = 50)
p_hat <- sum(samp)/length(samp)
samp1 <- sample(air, size=20)
samp2 <- sample(air, size=50)
samp3 <- sample(air, size=200)
phat1 <- sum(samp1)/length(samp1)
phat2 <- sum(samp2)/length(samp2)
phat3 <- sum(samp3)/length(samp3)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
ggplot(data = NULL, aes(x = phats_20)) + geom_histogram(bins = 30)
summary(phats_20)
mean_phats_20 <- mean(phats_20)
mean_phats_20 <- mean(phats_20)
diff <- mean_phats_20 - p
sd_phats_20 <- sd(phats_20)
set.seed(111)
phats_20 <- replicate(100000, mean(sample(air, size=20)))
phats_50 <- replicate(100000, mean(sample(air, size=50)))
phats_200 <- replicate(100000, mean(sample(air, size=200)))
ggplot(data = NULL, aes(x = phats_50)) + geom_histogram(bins = 30)
ggplot(data = NULL, aes(x = phats_50)) + geom_histogram(bins = 30)
ggplot(data = NULL, aes(x = phats_200)) + geom_histogram(bins = 30)
ggplot(data = NULL, aes(x = phats_50)) + geom_histogram(bins = 40)
ggplot(data = NULL, aes(x = phats_200)) + geom_histogram(bins = 40)
ggplot(data = NULL, aes(x = phats_50)) + geom_histogram(bins =50)
ggplot(data = NULL, aes(x = phats_200)) + geom_histogram(bins = 50)
ggplot(data = NULL, aes(x = phats_50)) + geom_histogram()
ggplot(data = NULL, aes(x = phats_200)) + geom_histogram()
ggplot(data = NULL, aes(x = phats_50)) + geom_histogram(bins = 30)
ggplot(data = NULL, aes(x = phats_200)) + geom_histogram(bins = 30)
ggplot(data = NULL, aes(x = phats_200)) +
geom_blank() +
geom_histogram(bins=30,aes(y = ..density..)) +
stat_function(fun = dnorm, args = c(mean = pop_p, sd = sqrt((pop_p)*(1-pop_p)/200)), col = "tomato")
lower <- pop_p - 1.96*pop_sd/sqrt(200)
upper <- pop_p + 1.96*pop_sd/sqrt(200)
sum(phats_200 > lower & phats_200 < upper)
## And calculations
lower <- pop_p - 1.96*pop_sd/sqrt(200)
upper <- pop_p + 1.96*pop_sd/sqrt(200)
round(sum(phats_200 > lower & phats_200 < upper),2)
lower <- pop_p - 1.96*pop_sd/sqrt(200)
upper <- pop_p + 1.96*pop_sd/sqrt(200)
sum(phats_200 > lower & phats_200 < upper)
lower <- pop_p - 1.96*pop_sd/sqrt(200)
upper <- pop_p + 1.96*pop_sd/sqrt(200)
proportion <- sum(phats_200 > lower & phats_200 < upper)/length(phats_200)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
choose(100,97)
# Choose function to calculate the number of ways to choose 97successes in 100 trails
value <- choose(100,97)
#Success = 0.90 & Fail = 1 - 0.90 = 0.10
success <- 0.90
fail <- 0.10
#Calculating the probability that exactly 97 out of 100 randomly sampled American adults had chickenpox during childhood.
probability1 <- value * success^97 * fail^3
#Choose function to calculate the number of ways to choose 3 failures in 100 trails
value2 <- choose(100,3)
#Calculating the probability that exactly 3 out of a new sample of 100 American adults have not had chickenpox in their childhood.
probability2 <- value2 * fail^3 * success^97
#Choose function to calculate the number of ways to choose 0 success in 10 trails
value3 <- choose(10,0)
#Calculating the probability that exactly none of a sample of 10 have had chickenpox
probability3 <- value3 * success^0 * fail^10
#The probability that at least 1 out of 10 have had chickenpox is the same as 1 - probability of none having chickenpox
answer <- 1 - probability3
#Choose function to calculate the number of ways to choose 0, 1, 2 and 3 failures in 10 trails
f0 <- choose(10,0)
f1 <- choose(10,1)
f2 <- choose(10,2)
f3 <- choose(10,3)
#Calculating the probability that exactly all of the sample of 10 have had chickenpox
p0 <- f0 * fail^0 * success^10
#Calculating the probability that exactly 9 of the sample of 10 have had chickenpox
p1 <- f1 * fail^1 * success^9
#Calculating the probability that exactly 8 of the sample of 10 have had chickenpox
p2 <- f2 * fail^2 * success^8
#Calculating the probability that exactly 7 of the sample of 10 have had chickenpox
p3 <- f3 * fail^3 * success^7
#The probability that at least 1 out of 10 have had chickenpox is the same as 1 - probability of none having chickenpox
answer2 <- p0 + p1 + p2 + p3
#Choose function to calculate the number of ways to choose 0 success in 10 trails
value3 <- choose(10,0)
#Calculating the probability that exactly none of a sample of 10 have had chickenpox
probability3 <- value3 * success^0 * fail^10
#The probability that at least 1 out of 10 have had chickenpox is the same as 1 - probability of none having chickenpox
answer <- 1 - probability3
#Choose function to calculate the number of ways to choose 0, 1, 2 and 3 failures in 10 trails
f0 <- choose(10,0)
f1 <- choose(10,1)
f2 <- choose(10,2)
f3 <- choose(10,3)
#Calculating the probability that exactly all of the sample of 10 have had chickenpox
p0 <- f0 * fail^0 * success^10
#Calculating the probability that exactly 9 of the sample of 10 have had chickenpox
p1 <- f1 * fail^1 * success^9
#Calculating the probability that exactly 8 of the sample of 10 have had chickenpox
p2 <- f2 * fail^2 * success^8
#Calculating the probability that exactly 7 of the sample of 10 have had chickenpox
p3 <- f3 * fail^3 * success^7
#The probability that at least 1 out of 10 have had chickenpox is the same as 1 - probability of none having chickenpox
answer2 <- p0 + p1 + p2 + p3
# Standard Devation
p = 0.9
SD = sqrt(0.9*0.1*120)
# Mean
mean = 0.09 * 15000
sd = sqrt(0.09*15000*(1-0.09))
# Mean
mean <- 0.09 * 15000
sd <- sqrt(0.09*15000*(1-0.09))
probability <- binomial(15000,0.09)
N(mean,sd)
x <- N(mean,sd)
# Z-score
Z <- (1500 - mean)/sd
probability4 <- 1 - dnorm(Z)
# Z-score
Z <- (1500 - mean)/sd
probability4 <- 1 - pnorm(Z)
# Z-score
Z <- (1500 - mean)/sd
probability4 <- 1 - pnorm(Z)
# Mean
mean <- 0.09 * 15000
sd <- sqrt(0.09*15000*(1-0.09))
# Z-score
Z <- (1500 - mean)/sd
probability4 <- 1 - pnorm(Z)
pnorm
# Z-score
Z <- (1500 - mean)/sd
pnorm(Z)
probability4 <- 1 - pnorm(Z)
pnorm
# Z-score
Z <- (1500 - mean)/sd
pnorm(Z)
probability4 <- 1 - pnorm(Z)
pnorm
# Z-score
Z <- (1500 - mean)/sd
round(1-pnorm(Z),6)
probability4 <- 1 - pnorm(Z)
pnorm
# Z-score
Z <- (1500 - mean)/sd
round(1-pnorm(Z),7)
probability4 <- 1 - pnorm(Z)
pnorm
# Z-score
Z <- (1500 - mean)/sd
round(1-pnorm(Z),7)
probability4 <- 1 - pnorm(Z)
9.4*10^-6
pnorm
# Z-score
Z <- (1500 - mean)/sd
#Calculating probability that a survey with 15000 households has 1500 or more responses is
probability4 <- 1 - pnorm(Z)
pnorm
# Z-score
Z <- (1500 - mean)/sd
#Calculating probability that a survey with 15000 households has 1500 or more responses is
probability4 <- 1 - pnorm(Z, lower.tail = FALSE)
pnorm
# Z-score
Z <- (1500 - mean)/sd
#Calculating probability that a survey with 15000 households has 1500 or more responses is
probability4 <- 1 - pnorm(Z)
library(tidyverse)
ames <- read.csv("http://anna-neufeld.github.io/Stat311/oiLabs/Week6/ames.csv")
area <- ames$Gr.Liv.Area
area <- ames$Gr.Liv.Area
pop_mean <- mean(area)
pop_sd <- sd(area)
SE <- pop_sd/sqrt(30)
xbar_30 <- replicate(100000, mean(sample(area, size=30)))
mean_xbar <- mean(xbar_30)
sd_xbar <- sd(xbar_30)
ggplot(data = NULL, aes(x = phats_200)) +
geom_blank() +
geom_histogram(bins=30,aes(y = ..density..)) +
stat_function(fun = dnorm, args = c(mean = pop_p, sd = pop_sd/sqrt(200)), col = "tomato")
ggplot(data = NULL, aes(x = xbar_30)) +
geom_blank() +
geom_histogram(bins=30,aes(y = ..density..)) +
stat_function(fun = dnorm, args = c(mean = pop_mean, sd = pop_sd/sqrt(30)), col = "tomato")
lower <- pop_mean - 1.96*pop_sd/sqrt(30)
upper <- pop_mean + 1.96*pop_sd/sqrt(30)
proportion <- sum(xbar_30 > lower & xbar_30 < upper)/length(xbar_30)
income_data <- read.csv("./incomeforfinalproject.csv", stringsAsFactors = FALSE)
shiny::runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
shiny::runApp('Github/finalprojectAH4')
runApp('Github/finalprojectAH4')
shiny::runApp('Github/finalprojectAH4')
shiny::runApp()
runApp()
#load libraries
library("dplyr")
library("httr")
library("jsonlite")
library("lubridate")
library("DT")
#load api-keys
source("propublica_key.R")
#Set up the UR
#function 1
table_function <- function(chamber = "house", state = "WA") {
#set the url
key <- propublica_key
base_url <- "https://api.propublica.org/congress/v1"
endpoint <- "/members"
resource_url <- paste0(base_url, endpoint)
extension <- "/current.json"
final_url <- paste0(
resource_url, "/", chamber,
"/", "state", extension)
return(final_url)
}
