filter(city %in% "Thousand Oaks") %>%
pull(num_killed)
# Number of people that are injured in November 7, 2018,
# California, Thousand Oaks city
injured_in_thousand_oaks <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(num_injured)
# Thousand Oaks city
thousand_oaks_city <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(city)
# The state of Thousand Oaks city
california <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(state)
# The date of Thousand Oaks city mass shooting event
date <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(date)
# An interactive map
# Interactive map that shows a marker at the location of each shooting
impacted <- shootings_2018_data$num_killed + shootings_2018_data$num_injured
interactive_map <- leaflet(data = shootings_2018_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Date: ", shootings_2018_data$date, "<br>",
"Address: ", shootings_2018_data$address, "<br>",
"State: ", shootings_2018_data$state, "<br>",
"Killed num: ", shootings_2018_data$num_killed, "<br>",
"Injured num: ", shootings_2018_data$num_injured, "<br>"),
radius = impacted * 10000,
stroke = FALSE
)
# A plot of your choice
# A plot of Total number of killed and injured in each month
data_plot <- shootings_2018_data %>%
mutate(month = format(as.Date(date, format = "%B %d, %Y"), "%B")) %>%
mutate(total_num_of_killed_and_injured = num_killed + num_injured) %>%
group_by(month) %>%
summarize(month_total_killed_and_injured =
sum(total_num_of_killed_and_injured)) %>%
mutate(month = factor(month, levels = month.name))
plot_total_imapcted_by_month <- ggplot(data = data_plot) +
geom_bar(stat = "identity", mapping =
aes(x = month, y = month_total_killed_and_injured,
fill = month)) +
labs(
title = "Total number of killed and injured each month",
x = "Month",
y = "Total number of killed and injured"
) + theme(axis.text.x  = element_text(angle = 45, hjust = 1))
impacted <- shootings_2018_data$num_killed + shootings_2018_data$num_injured
interactive_map <- leaflet(data = shootings_2018_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Date: ", shootings_2018_data$date, "<br>",
"Address: ", shootings_2018_data$address, "<br>",
"State: ", shootings_2018_data$state, "<br>",
"Killed num: ", shootings_2018_data$num_killed, "<br>",
"Injured num: ", shootings_2018_data$num_injured, "<br>"),
radius = impacted * 10000,
stroke = FALSE
)
# A5 Data Report
# Load the `dplyr` package
library("dplyr");
# Load your data, making sure to not interpret strings as factors
shootings_2018_data <-
read.csv("./data/shootings-2018.csv", stringsAsFactors = FALSE)
# Summary information
# - How many shooting events occurred?
total_shooting_events <- nrow(shootings_2018_data)
# - How many lives were lost?
total_num_killed <- shootings_2018_data %>%
select(num_killed) %>%
sum
# - Which city was most impacted by shootings
# (make sure to clarify  how you are measuring "impact")?
# I feel like the most shooting impacted city would be the
# city that has the largest total number of killed and injured
most_shooting_impacted_city <- shootings_2018_data %>%
mutate(total_num_of_killed_and_injured = num_killed + num_injured) %>%
arrange(desc(total_num_of_killed_and_injured)) %>%
filter(row_number() == 1) %>%
pull(city)
# - Two other insights of your choice
# Question 1 - Which state(s) has the most shooting events?
state_most_shooting_event <- shootings_2018_data %>%
group_by(state) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) %>%
filter(row_number() == 1 | row_number() == 2) %>%
pull(state)
# Question 2 - How many people were injured in 2018?
total_num_injured <- shootings_2018_data %>%
select(num_injured) %>%
sum
# Summary Table
# - Which state was impacted by shootings the most
# (the highest total number of killed and injured by shooting)
state_was_impacted_the_most <- shootings_2018_data %>%
mutate(total_num_of_killed_and_injured = num_killed + num_injured) %>%
group_by(state) %>%
summarize(Total_number_of_killed_and_injured =
sum(total_num_of_killed_and_injured)) %>%
arrange(desc(Total_number_of_killed_and_injured))
# Description of a particular incident
# Data of shooting events in Thousand Oaks City
# Number of people that are killed in
# November 7, 2018, California, Thousand Oaks city
killed_in_thousand_oaks <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(num_killed)
# Number of people that are injured in November 7, 2018,
# California, Thousand Oaks city
injured_in_thousand_oaks <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(num_injured)
# Thousand Oaks city
thousand_oaks_city <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(city)
# The state of Thousand Oaks city
california <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(state)
# The date of Thousand Oaks city mass shooting event
date <- shootings_2018_data %>%
filter(city %in% "Thousand Oaks") %>%
pull(date)
# An interactive map
# Interactive map that shows a marker at the location of each shooting
impacted <- shootings_2018_data$num_killed + shootings_2018_data$num_injured
interactive_map <- leaflet(data = shootings_2018_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Date: ", shootings_2018_data$date, "<br>",
"Address: ", shootings_2018_data$address, "<br>",
"State: ", shootings_2018_data$state, "<br>",
"Killed num: ", shootings_2018_data$num_killed, "<br>",
"Injured num: ", shootings_2018_data$num_injured, "<br>"),
radius = impacted * 10000,
stroke = FALSE
)
impacted <- shootings_2018_data$num_killed + shootings_2018_data$num_injured
interactive_map <- leaflet(data = shootings_2018_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Date: ", shootings_2018_data$date, "<br>",
"Address: ", shootings_2018_data$address, "<br>",
"State: ", shootings_2018_data$state, "<br>",
"Killed num: ", shootings_2018_data$num_killed, "<br>",
"Injured num: ", shootings_2018_data$num_injured, "<br>"),
radius = impacted * 10000,
stroke = FALSE
)
interactive_map <- leaflet(data = shootings_2018_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Date: ", shootings_2018_data$date, "<br>",
"Address: ", shootings_2018_data$address, "<br>",
"State: ", shootings_2018_data$state, "<br>",
"Killed num: ", shootings_2018_data$num_killed, "<br>",
"Injured num: ", shootings_2018_data$num_injured, "<br>"),
radius = impacted * 10000,
stroke = FALSE
)
print(interactive_map)
print(interactive_map)
print(interactive_map)
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty's work LOL")
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = suicide_num * 10000,
stroke = FALSE
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = suicide_num,
stroke = FALSE
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = suicide_num * 100,
stroke = FALSE
)
print(interactive_map)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = ~suicide_num * 50,
weight = 1
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$state, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$State, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", shootings_2018_data$State, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", suic_state$State, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
library(leaflet)
suicide_num <- suic_state$X2015
interactive_map <- leaflet(data = suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", suic_state$X2015, "<br>",
"State: ", suic_state$State, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
population <- read.csv("./populations.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty's work LOL")
population <- read.csv("./populations.csv", stringsAsFactors = FALSE)
population <- read.csv("./populations.csv", stringsAsFactors = FALSE)
population <- read.csv("./populations.csv", stringsAsFactors = FALSE)
population <- read.csv("populations.csv", stringsAsFactors = FALSE)
source('~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty\'s work LOL/map.R')
source('~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty\'s work LOL/map.R')
population <- read.csv("populations.csv", stringsAsFactors = FALSE)
source('~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty\'s work LOL/map.R')
source('~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty\'s work LOL/map.R')
suic_state <-
read.csv("./four_years_state_suicide.csv", stringsAsFactors = FALSE)
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
source('~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty\'s work LOL/map.R')
source('~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty\'s work LOL/map.R')
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty's work LOL")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
population <- read.csv("populations.csv", stringsAsFactors = FALSE)
View(population)
suicide_num <- suic_state$X2015 / population$X2015
new_suic_state <- suic_state %>%
select(!State, "District of Columbia")
new_suic_state <- suic_state %>%
select(State != "District of Columbia")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
select(State != "District of Columbia")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
View(new_suic_state)
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
library(ggplot2)
library(dplyr)
population <- read.csv("populations.csv", stringsAsFactors = FALSE)
library(leaflet)
interactive_map <- leaflet(data = new_suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", new_suic_state$X2015, "<br>",
"State: ", new_suic_state$State, "<br>"),
radius = ~suicide_num * 50,
stroke = FALSE
)
print(interactive_map)
interactive_map <- leaflet(data = new_suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", new_suic_state$X2015, "<br>",
"State: ", new_suic_state$State, "<br>"),
radius = ~new_suic_state$X2015 * 50,
stroke = FALSE
)
print(interactive_map)
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
interactive_map <- leaflet(data = new_suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", new_suic_state$X2015, "<br>",
"State: ", new_suic_state$State, "<br>"),
radius = ~new_suic_state$X2015 * 50,
stroke = FALSE
)
print(interactive_map)
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
View(new_suic_state)
interactive_map <- leaflet(data = new_suic_state) %>%
addTiles() %>%
addCircles(
lat = ~lat,
lng = ~long,
popup = ~paste("Year: 2015", "<br>",
"Suicide Number: ", new_suic_state$X2015, "<br>",
"State: ", new_suic_state$State, "<br>"),
radius = ~new_suic_state$X2015 * 50,
stroke = FALSE
)
print(interactive_map)
shiny::runApp()
write.csv(new_suic_state)
write.csv(new_suic_state, file = "new_suic_state.csv")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
write.csv(new_suic_state, file = "new_suic_state.csv")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
write.csv(new_suic_state, file = "new_suic_state.csv")
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
suic_state <-
read.csv("by-state-suicide/four_years_state_suicide.csv", stringsAsFactors = FALSE)
new_suic_state <- suic_state %>%
filter(State != "District of Columbia")
write.csv(new_suic_state, file = "new_suic_state.csv")
write.csv(new_suic_state, "new_suic_state.csv")
View(new_suic_state)
library(shiny)
library(leaflet)
library(dplyr)
library(leaflet.extras)
#import data
data <- read.csv("new_suic_state.csv")
#load libraries
library(shiny)
library(leaflet)
library(dplyr)
library(leaflet.extras)
#import data
data <- read.csv("new_suic_state.csv")
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4/Betty's work LOL")
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4")
#load libraries
library(shiny)
library(leaflet)
library(dplyr)
library(leaflet.extras)
#import data
data <- read.csv("new_suic_state.csv")
#load libraries
library(shiny)
library(leaflet)
library(dplyr)
library(leaflet.extras)
#import data
data <- read.csv("by-state-suicide/new_suic_state.csv")
server <- function(input, output, session) {
#define the color pallate for the magnitidue of the earthquake
pal <- colorNumeric(
palette = c('gold', 'orange', 'dark orange', 'orange red', 'red', 'dark red'),
domain = data$X2000)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/UW/Autumn 19/INFO 201/finalprojectAH4")
runApp()
runApp()
runApp()
runApp()
runApp()
